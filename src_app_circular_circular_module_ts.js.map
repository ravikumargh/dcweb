{"version":3,"file":"src_app_circular_circular_module_ts.js","mappings":"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","sources":["./src/app/circular/circular.module.ts","./src/app/circular/circular.routing.ts","./src/app/circular/list/chat-data.ts","./src/app/circular/list/list.component.ts","./src/app/circular/list/list.component.html","./src/app/circular/test/test.component.ts","./src/app/circular/test/test.component.html","./node_modules/@angular/cdk/fesm2015/tree.mjs","./node_modules/@angular/material/fesm2015/tree.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { TestComponent } from './test/test.component';\nimport { CircularRoutes } from './circular.routing';\nimport { ListComponent } from './list/list.component';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n\n@NgModule({\n  declarations: [\n    TestComponent,\n    ListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTreeModule,\n        FlexLayoutModule,\n        DemoMaterialModule,\n    RouterModule.forChild(CircularRoutes),\n\n  ]\n})\nexport class CircularModule { }\n","import { Routes } from '@angular/router';\r\nimport { ListComponent } from './list/list.component';\r\n\r\nimport { TestComponent } from './test/test.component';\r\n\r\nexport const CircularRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListComponent\r\n  } \r\n];\r\n","export const messages = [{\n    from: 'Nirav Joshi',\n    photo: 'assets/images/users/1.jpg',\n    subject: 'Hey, how are you?',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'Hi Luke.',\n            date: new Date(\"2016-01-05\")\n        },\n        {\n            type: 'odd',\n            msg: 'How are you my friend?',\n            date: new Date(\"2016-01-06\")\n        },\n        {\n            type: 'even',\n            msg: 'I am good and what about you?',\n            date: new Date(\"2016-01-07\")\n        },\n        {\n            type: 'odd',\n            msg: 'Lorem Ipsum is simply dummy text of the printing & type setting industry.',\n            date: new Date(\"2016-01-08\")\n        },\n        {\n            type: 'even',\n            msg: 'I would love to join the team.',\n            date: new Date(\"2016-01-09\")\n        },\n        {\n            type: 'odd',\n            msg: 'Well we have good budget for the project.',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Sunil Joshi',\n    photo: 'assets/images/users/2.jpg',\n    subject: 'Lorem ipsum done dkaghdka',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd2',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even2',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Vishal bhatt',\n    photo: 'assets/images/users/3.jpg',\n    subject: 'Thanks mate',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Genelia Desouza',\n    photo: 'assets/images/users/4.jpg',\n    subject: 'This is my shot',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Linda muke',\n    photo: 'assets/images/users/5.jpg',\n    subject: 'You have to do it with your self',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Vaibhav Zala',\n    photo: 'assets/images/users/6.jpg',\n    subject: 'No mate this is not',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}, {\n    from: 'Kalu valand',\n    photo: 'assets/images/users/1.jpg',\n    subject: 'Arti thai gai ne?',\n    chat: [\n        {\n            type: 'odd',\n            msg: 'this is odd',\n            date: new Date(\"2016-01-10\")\n        },\n        {\n            type: 'even',\n            msg: 'this is even',\n            date: new Date(\"2016-01-10\")\n        }\n    ]\n}];"," \nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { messages } from './chat-data';\n\ninterface FoodNode {\n    name: string;\n    children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n  {\n    name: 'Credit monitoring dept',\n    children: [\n        { name: 'GF (109)' ,\n        children: [\n          { name: '2022 - 23' ,\n          children: [\n            { name: 'HO/CrMD/CIR/GF:109/19' },\n            { name: 'HO/CrMD/CIR/GF:109/20' },\n            { name: 'HO/CrMD/CIR/GF:109/21' },\n        ]},\n          { name: '2023 - 24' },\n          { name: '2021 - 22' },\n      ]\n      },\n        { name: 'FF (110)' },\n        { name: 'SF (130)' },\n    ]\n},\n  {\n    name: 'Managing director secretariat',\n    children: [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Fruit loops' },\n    ]\n}, {\n    name: 'Chairman secretariat',\n    children: [\n        {\n            name: 'Green',\n            children: [\n                { name: 'Broccoli' },\n                { name: 'Brussels sprouts' },\n            ]\n        }, {\n            name: 'Orange',\n            children: [\n                { name: 'Pumpkins' },\n                { name: 'Carrots' },\n            ]\n        },\n    ]\n}\n\n    \n];\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n    expandable: boolean;\n    name: string;\n    level: number;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  them: any;\n  user: any;\n  sidePanelOpened = true;\n  msg: string = '';\n\n  // MESSAGE\n  selectedMessage: any;\n  messages: Object[] = messages;\n\n    private _transformer = (node: FoodNode, level: number) => {\n        return {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n        };\n    }\n\n    treeControl = new FlatTreeControl<ExampleFlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor() {\n        this.dataSource.data = TREE_DATA;\n        this.selectedMessage = this.messages[0];\n    }\n    ngOnInit(): void {\n    }\n    hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n    // @ViewChild('myInput', { static: true }) myInput: ElementRef;\n\n    isOver(): boolean {\n        return window.matchMedia(`(max-width: 960px)`).matches;\n    }\n\n    onSelect(message: Object[]): void {\n        this.selectedMessage = message;\n    }\n\n    OnAddMsg() {\n        // this.msg = this.myInput.nativeElement.value;\n\n        if (this.msg != '') {\n            this.selectedMessage.chat.push({\n                type: 'even',\n                msg: this.msg,\n                date: new Date()\n            });\n        }\n\n        // this.myInput.nativeElement.value = '';\n    }\n}\n"," \n\n<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n      <mat-card class=\"mat-card-top chat-app\">\n        <mat-sidenav-container\n          [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n          <mat-sidenav #chatnav [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true\"\n            (close)=\"sidePanelOpened = false\">\n            <mat-toolbar color=\"accent\" class=\"no-shadow\">\n              <div fxLayout=\"row\" fxFlex=\"100\">\n                <span class=\"m-t-0 font-14\">\n                  Circulars\n                </span>\n              </div>\n            </mat-toolbar>\n            <!-- <mat-nav-list>\n              <mat-list-item (click)=\"onSelect(message)\" [class.active]=\"message === selectedMessage\"\n                *ngFor=\"let message of messages\">\n                <img mat-list-avatar src=\"{{message.photo}}\" alt=\"\">\n                <h3 matLine> {{message.from}} </h3>\n                <p matLine class=\"text-muted\"> {{message.subject}} </p>\n              </mat-list-item>\n            </mat-nav-list> -->\n            <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n                <!-- This is the tree node template for leaf nodes -->\n                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n                    <button mat-icon-button disabled></button>\n                    {{node.name}}\n                </mat-tree-node>\n                <!-- This is the tree node template for expandable nodes -->\n                <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.name\">\n                        <mat-icon class=\"mat-icon-rtl-mirror\">\n                            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                        </mat-icon>\n                    </button>\n                    {{node.name}}\n                </mat-tree-node>\n            </mat-tree>\n          </mat-sidenav>\n          <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"accent\">\n            <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n              <button (click)=\"chatnav.toggle()\" class=\"mr-1\" mat-icon-button>\n                <mat-icon>short_text</mat-icon>\n              </button>\n              <span class=\"top-avatar m-r-10\">\n                 \n              </span>\n              <div fxFlex>\n                <div class=\"font-14\">HO/CrMD/CIR/GF:109/19</div>\n                <!-- <div class=\"font-14\">{{selectedMessage.from}}</div> -->\n              </div>\n              <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #them=\"matMenu\" x-position=\"before\">\n                <button mat-menu-item>Contact info</button>\n                <button mat-menu-item>Mute</button>\n                <button mat-menu-item>Delete chat</button>\n              </mat-menu>\n            </div>\n          </mat-toolbar>\n          <mat-card-content class=\"chat-middle-box\">\n            <div> Path : Root folder/Circular/HO/CrMD/CIR/GF:109/19</div>\n            <b>Document overview : HO/CrMD/CIR/GF:109/19</b>\n            <!-- <ng-container *ngFor=\"let c of selectedMessage.chat\">\n              <ng-template [ngIf]=\"c.type == 'odd'\" [ngIfElse]=\"evenblock\">\n                <div class=\"chat-list odd\">\n                  <div class=\"chat-message\">\n                    <div class=\"chat-block\">\n                      <span>\n                        <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\" width=\"40\">\n                      </span>\n                      <span>{{c.msg}}</span>\n                    </div>\n                    <span class=\"chat-date\">{{ c.date | date }}</span>\n                  </div>\n                </div>\n              </ng-template>\n              <ng-template #evenblock>\n                <div class=\"chat-list even\">\n                  <div class=\"chat-message\">\n                    <div class=\"chat-block bg-light-info\">{{c.msg}}</div>\n                    <span class=\"chat-date\">{{ c.date | date}}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </ng-container> -->\n  \n          </mat-card-content>\n          <mat-card-actions class=\"chat-footer\">\n            <div fxLayout=\"row\" layout-align=\"start center\">\n              <!-- <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n                <input matInput [(ngModel)]=\"msg\" placeholder=\"Send message\" #myInput (keyup.enter)=\"OnAddMsg()\">\n              </mat-form-field>\n              <button mat-fab color=\"warn\" (click)=\"OnAddMsg()\" [disabled]=\"!msg\">\n                <mat-icon>send</mat-icon>\n              </button> -->\n            </div>\n          </mat-card-actions>\n        </mat-sidenav-container>\n      </mat-card>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test works!</p>\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TREE_NODE_OUTLET_NODE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeDef, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: ['when: cdkTreeNodeDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTree, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCdkTree.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTree, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, host: { attributes: { \"role\": \"tree\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        CdkTreeNode.mostRecentTreeNode = this;\n        this.role = 'treeitem';\n    }\n    /**\n     * The role of the tree node.\n     * @deprecated The correct role is 'treeitem', 'group' should not be used. This input will be\n     *   removed in a future version.\n     * @breaking-change 12.0.0 Remove this input\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.setAttribute('role', _role);\n    }\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        // If the treeControl has a getLevel method, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._data)\n            : this._parentNodeAriaLevel;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._elementRef.nativeElement.setAttribute('aria-level', `${this.level + 1}`);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable &&\n            !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNode, selector: \"cdk-tree-node\", inputs: { role: \"role\" }, host: { properties: { \"attr.aria-expanded\": \"isExpanded\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': 'isExpanded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }]; }, propDecorators: { role: [{\n                type: Input\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return coerceNumberProperty(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!((classList === null || classList === void 0 ? void 0 : classList.contains('cdk-nested-tree-node')) || (classList === null || classList === void 0 ? void 0 : classList.contains('cdk-tree')));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(elementRef, tree, _differs) {\n        super(elementRef, tree);\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNestedTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkNestedTreeNode, selector: \"cdk-nested-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n    ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }, { type: i0.IterableDiffers }]; }, propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = this._treeNode.data && this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodePadding, deps: [{ token: CdkTreeNode }, { token: CdkTree }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodePadding.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodePadding, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTreeNode }, { type: CdkTree }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { level: [{\n                type: Input,\n                args: ['cdkTreeNodePadding']\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() {\n        return this._recursive;\n    }\n    set recursive(value) {\n        this._recursive = coerceBooleanProperty(value);\n    }\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeToggle, deps: [{ token: CdkTree }, { token: CdkTreeNode }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTreeNodeToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTreeNodeToggle, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] }, host: { listeners: { \"click\": \"_toggle($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, propDecorators: { recursive: [{\n                type: Input,\n                args: ['cdkTreeNodeToggleRecursive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, declarations: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet] });\nCdkTreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n","import * as i1 from '@angular/cdk/tree';\nimport { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { Directive, Attribute, Input, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatTreeNodeBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends _MatTreeNodeBase {\n    constructor(elementRef, tree, tabIndex) {\n        super(elementRef, tree);\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNode, selector: \"mat-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, host: { classAttribute: \"mat-tree-node\" }, providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }], exportAs: [\"matTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-tree-node',\n                    exportAs: 'matTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }],\n                    host: {\n                        'class': 'mat-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    } });\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeDef, selector: \"[matTreeNodeDef]\", inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeDef]',\n                    inputs: ['when: matTreeNodeDefWhen'],\n                    providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }],\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['matTreeNode']\n            }] } });\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    constructor(elementRef, tree, differs, tabIndex) {\n        super(elementRef, tree, differs);\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /** Whether the node is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Tabindex for the node. */\n    get tabIndex() {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/19145\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: i0.IterableDiffers }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatNestedTreeNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatNestedTreeNode, selector: \"mat-nested-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\", node: [\"matNestedTreeNode\", \"node\"] }, host: { classAttribute: \"mat-nested-tree-node\" }, providers: [\n        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n    ], exportAs: [\"matNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-nested-tree-node',\n                    exportAs: 'matNestedTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [\n                        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'mat-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { node: [{\n                type: Input,\n                args: ['matNestedTreeNode']\n            }], disabled: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n}\nMatTreeNodePadding.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodePadding, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodePadding.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodePadding, selector: \"[matTreeNodePadding]\", inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodePadding]',\n                    providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }],\n                }]\n        }], propDecorators: { level: [{\n                type: Input,\n                args: ['matTreeNodePadding']\n            }], indent: [{\n                type: Input,\n                args: ['matTreeNodePaddingIndent']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\", providers: [\n        {\n            provide: CdkTreeNodeOutlet,\n            useExisting: MatTreeNodeOutlet,\n        },\n    ], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeOutlet]',\n                    providers: [\n                        {\n                            provide: CdkTreeNodeOutlet,\n                            useExisting: MatTreeNodeOutlet,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TREE_NODE_OUTLET_NODE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTree, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTree.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTree, selector: \"mat-tree\", host: { attributes: { \"role\": \"tree\" }, classAttribute: \"mat-tree\" }, providers: [{ provide: CdkTree, useExisting: MatTree }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: MatTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"matTree\"], usesInheritance: true, ngImport: i0, template: `<ng-container matTreeNodeOutlet></ng-container>`, isInline: true, styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\"], dependencies: [{ kind: \"directive\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTree, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tree', exportAs: 'matTree', template: `<ng-container matTreeNodeOutlet></ng-container>`, host: {\n                        'class': 'mat-tree',\n                        'role': 'tree',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [{ provide: CdkTree, useExisting: MatTree }], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\"] }]\n        }], propDecorators: { _nodeOutlet: [{\n                type: ViewChild,\n                args: [MatTreeNodeOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n}\nMatTreeNodeToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatTreeNodeToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTreeNodeToggle, selector: \"[matTreeNodeToggle]\", inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeToggle]',\n                    providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }],\n                    inputs: ['recursive: matTreeNodeToggleRecursive'],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet,\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, declarations: [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet], imports: [CdkTreeModule, MatCommonModule], exports: [MatCommonModule, MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet] });\nMatTreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTreeModule, MatCommonModule],\n                    exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                    declarations: MAT_TREE_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nclass MatTreeFlatDataSource extends DataSource {\n    constructor(_treeControl, _treeFlattener, initialData) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject([]);\n        if (initialData) {\n            // Assign the data through the constructor to ensure that all of the logic is executed.\n            this.data = initialData;\n        }\n    }\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    connect(collectionViewer) {\n        return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n    }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n"],"names":["SelectionModel","isDataSource","isObservable","Subject","BehaviorSubject","of","take","filter","takeUntil","i0","InjectionToken","Directive","Inject","Optional","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","ViewChild","ContentChildren","NgModule","coerceNumberProperty","coerceBooleanProperty","i2","BaseTreeControl","constructor","expansionModel","toggle","dataNode","_trackByValue","expand","select","collapse","deselect","isExpanded","isSelected","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","clear","toBeProcessed","push","getDescendants","map","value","trackBy","FlatTreeControl","getLevel","isExpandable","options","startIndex","dataNodes","indexOf","results","i","length","expandAll","node","NestedTreeControl","getChildren","allNodes","reduce","accumulator","descendants","_getDescendants","splice","childrenNodes","Array","isArray","forEach","child","pipe","Boolean","subscribe","children","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","ɵfac","ViewContainerRef","ɵdir","type","args","selector","undefined","decorators","CdkTreeNodeOutletContext","data","$implicit","CdkTreeNodeDef","template","TemplateRef","inputs","getTreeNoValidDataSourceError","Error","getTreeMultipleDefaultNodeDefsError","getTreeMissingMatchingNodeDefError","getTreeControlMissingError","getTreeControlFunctionsMissingError","CdkTree","_differs","_changeDetectorRef","_onDestroy","_levels","Map","viewChange","start","end","Number","MAX_VALUE","dataSource","_dataSource","_switchDataSource","ngOnInit","_dataDiffer","find","create","treeControl","ngDevMode","ngOnDestroy","_nodeOutlet","complete","next","disconnect","_dataSubscription","unsubscribe","ngAfterContentChecked","defaultNodeDefs","_nodeDefs","def","when","_defaultNodeDef","_observeRenderChanges","dataStream","connect","renderNodeChanges","dataDiffer","parentData","changes","diff","forEachOperation","item","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","remove","delete","view","get","move","detectChanges","_getNodeDef","first","nodeDef","nodeData","index","context","level","has","set","container","createEmbeddedView","CdkTreeNode","mostRecentTreeNode","IterableDiffers","ChangeDetectorRef","ɵcmp","exportAs","host","encapsulation","None","changeDetection","Default","static","_elementRef","_tree","_destroyed","_dataChanges","role","_role","nativeElement","setAttribute","_data","_setRoleFromData","_parentNodeAriaLevel","getParentNodeAriaLevel","focus","ElementRef","nodeElement","parent","parentElement","isNodeElement","classList","contains","getAttribute","element","CdkNestedTreeNode","elementRef","tree","ngAfterContentInit","updateChildrenNodes","result","nodeOutlet","_clear","outlet","_getNodeOutlet","_children","outlets","provide","useExisting","providers","cssUnitPattern","CdkTreeNodePadding","_treeNode","_element","_dir","indentUnits","_indent","_setPadding","change","_level","_setLevelInput","indent","_setIndentInput","_paddingIndent","nodeLevel","forceChange","padding","_currentPadding","paddingProp","resetProp","style","units","parts","split","Directionality","CdkTreeNodeToggle","_recursive","recursive","_toggle","event","stopPropagation","EXPORTED_DECLARATIONS","CdkTreeModule","ɵmod","ɵinj","exports","declarations","i1","Attribute","mixinTabIndex","mixinDisabled","MatCommonModule","DataSource","merge","_MatTreeNodeBase","MatTreeNode","tabIndex","MatTreeNodeDef","MatNestedTreeNode","differs","_disabled","disabled","_tabIndex","MatTreeNodePadding","MatTreeNodeOutlet","MatTree","styles","MatTreeNodeToggle","MAT_TREE_DIRECTIVES","MatTreeModule","imports","MatTreeFlattener","transformFunction","_flattenNode","resultNodes","parentMap","flatNode","_flattenChildren","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","nodes","currentExpand","MatTreeFlatDataSource","_treeControl","_treeFlattener","initialData","_flattenedData","_expandedData","collectionViewer","changed","MatTreeNestedDataSource","arguments"],"sourceRoot":"webpack:///"}